import json
from datetime import datetime

from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram import Router, F
from sqlalchemy import update

from app.database.models import async_session, User
from app.user.func import get_currency_rates, get_yahoo_data, get_crypto_data, get_moex_data, get_fear_and_greed_index
from app.addons.utilits import format_change
from app.user import keyboard as kb
import app.database.requests as rq


router = Router()

with open("/Users/denstep256/Desktop/news_bot/app/addons/texts.json", encoding="utf-8") as file_handler:
    text_mess = json.load(file_handler)
    texts_for_bot = text_mess

@router.message(CommandStart())
async def cmd_start(message: Message):
    await rq.set_user_start(message.from_user.id,
                            message.from_user.username,
                            message.from_user.first_name,
                            datetime.now())
    await message.answer(texts_for_bot["start_message"], parse_mode='HTML', reply_markup=kb.main)

@router.message(F.text == 'üìß–ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á–µ—Ç üìß')
async def send_news(message: Message):
    currencies = get_currency_rates()
    cryptos = get_crypto_data()
    fng_index = get_fear_and_greed_index()
    moex_data = get_moex_data()
    yahoo_data = get_yahoo_data()
    user_time = await rq.get_user_time(message.from_user.id)

    news_message = (
        "*–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ–±–∑–æ—Ä*\n\n"
        "üåç *–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç*:\n"
        f"- üíµ **–î–æ–ª–ª–∞—Ä**: {currencies['USD']['Value']} ‚ÇΩ ({format_change(currencies['USD']['Value'] - currencies['USD']['Previous'])})\n"
        f"- üí∂ **–ï–≤—Ä–æ**: {currencies['EUR']['Value']} ‚ÇΩ ({format_change(currencies['EUR']['Value'] - currencies['EUR']['Previous'])})\n"
        f"- üá®üá≥ **–Æ–∞–Ω—å**: {currencies['CNY']['Value']} ‚ÇΩ ({format_change(currencies['CNY']['Value'] - currencies['CNY']['Previous'])})\n\n"
        "üìâ *–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã*:\n"
        f"- üåà **Bitcoin**: {cryptos['BTC']['price']:.2f} $ ({format_change(cryptos['BTC']['percent_change_24h'])})\n"
        f"- ü¶¥ **Ethereum**: {cryptos['ETH']['price']:.2f} $ ({format_change(cryptos['ETH']['percent_change_24h'])})\n"
        f"- ü™ô **XRP**: {cryptos['XRP']['price']:.2f} $ ({format_change(cryptos['XRP']['percent_change_24h'])})\n"
        f"- üåû **Solana**: {cryptos['SOL']['price']:.2f} $ ({format_change(cryptos['SOL']['percent_change_24h'])})\n"
        f"- üèñ **BNB**: {cryptos['BNB']['price']:.2f} $ ({format_change(cryptos['BNB']['percent_change_24h'])})\n"
        f"- üåê **Toncoin**: {cryptos['TON']['price']:.2f} $ ({format_change(cryptos['TON']['percent_change_24h'])})\n"
        f"- üí∏ **TRUMP**: {cryptos['TRUMP']['price']:.2f} $ ({format_change(cryptos['TRUMP']['percent_change_24h'])})\n\n"
        "üìä *–ò–Ω–¥–µ–∫—Å—ã*:\n"
        f"- üò± **–ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏**: {fng_index['value']} ({fng_index['value_classification']})\n"
        f"- üìà **IMOEX**: {moex_data['IMOEX']['price']} ‚ÇΩ ({format_change(moex_data['IMOEX']['change'])})\n"
        f"- üìà **S&P 500**: {yahoo_data['S&P 500']['price']:.2f} $ ({format_change(yahoo_data['S&P 500']['change'])})\n\n"
        "üìâ *–ê–∫—Ü–∏–∏*:\n"
        f"- üè¶ **–°–±–µ—Ä–±–∞–Ω–∫**: {moex_data['SBER']['price']} ‚ÇΩ ({format_change(moex_data['SBER']['change'])})\n"
        f"- ‚õΩ **–ì–∞–∑–ø—Ä–æ–º**: {moex_data['GAZP']['price']} ‚ÇΩ ({format_change(moex_data['GAZP']['change'])})\n"
        f"- ‚õΩ **–õ—É–∫–æ–π–ª**: {moex_data['LKOH']['price']} ‚ÇΩ ({format_change(moex_data['LKOH']['change'])})\n"
        f"- üåê **–Ø–Ω–¥–µ–∫—Å**: {moex_data['YDEX']['price']} ‚ÇΩ ({format_change(moex_data['YDEX']['change'])})\n"
        f"- üõ¢ **–†–æ—Å–Ω–µ—Ñ—Ç—å**: {moex_data['ROSN']['price']} ‚ÇΩ ({format_change(moex_data['ROSN']['change'])})\n\n"
        f"- üçè **Apple**: {yahoo_data['Apple']['price']:.2f} $ ({format_change(yahoo_data['Apple']['change'])})\n"
        f"- üöó **Tesla**: {yahoo_data['Tesla']['price']:.2f} $ ({format_change(yahoo_data['Tesla']['change'])})\n"
        f"- üíª **Nvidia**: {yahoo_data['Nvidia']['price']:.2f} $ ({format_change(yahoo_data['Nvidia']['change'])})\n"
        f"- üîç **Google**: {yahoo_data['Google']['price']:.2f} $ ({format_change(yahoo_data['Google']['change'])})\n"
        f"- üì¶ **Amazon**: {yahoo_data['Amazon']['price']:.2f} $ ({format_change(yahoo_data['Amazon']['change'])})\n\n"
        f"üïí *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:* {user_time}"
    )


    await message.answer(news_message, parse_mode='Markdown')

@router.message(F.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def settings(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ú–°–ö(UTC+3))', parse_mode='HTML', reply_markup=kb.time_zone_keyboard)

@router.message(F.text == 'üè†–ò—Ä–∫—É—Ç—Å–∫ (UTC+8)')
async def change_timezone_irk(message: Message):
    tg_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º tg_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    async with async_session() as session:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ time_utc –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        query = update(User).where(User.tg_id == tg_id).values(time_utc="+8")
        await session.execute(query)
        await session.commit()

    await message.answer('–í—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: –ò—Ä–∫—É—Ç—Å–∫ (UTC+8)', parse_mode='HTML', reply_markup=kb.main)

@router.message(F.text == 'üè†–ú–°–ö (UTC+3)')
async def change_timezone_irk(message: Message):
    tg_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º tg_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    async with async_session() as session:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ time_utc –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        query = update(User).where(User.tg_id == tg_id).values(time_utc="+3")
        await session.execute(query)
        await session.commit()

    await message.answer('–í—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: –ú–°–ö (UTC+3)', parse_mode='HTML', reply_markup=kb.main)

@router.message(F.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
async def change_timezone_irk(message: Message):
    await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é', parse_mode='HTML', reply_markup=kb.main)